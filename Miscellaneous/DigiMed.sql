DROP DATABASE IF EXISTS DigiMed;
create database IF NOT EXISTS DigiMed;
USE DigiMed;

CREATE TABLE IF NOT EXISTS Patient(
NatID CHAR(14) NOT NULL PRIMARY KEY,
FirstName varchar(50) NOT NULL,
MiddleName varchar(50) NULL,
LastName varchar(50) NOT NULL,
Street varchar(250) NULL,
Region varchar(250) NULL,
City varchar(250) NULL,
PhoneNumber varchar(17) NULL,
Email varchar(150) NULL,
Gender char NULL,
DOB date NULL,
BloodType VARCHAR(3) NULL,
Height Decimal(4, 1) NULL,
Weight Decimal(4, 1) NULL
);

CREATE TABLE IF NOT EXISTS Doctor(
NatID CHAR(14) NOT NULL PRIMARY KEY,
FirstName varchar(50) NOT NULL,
MiddleName varchar(50) NULL,
LastName varchar(50) NOT NULL,
Specialty varchar(250) NULL,
SubSpecialty varchar(250)
);

CREATE TABLE IF NOT EXISTS TreatedBy(
PatientNatID CHAR(14) NOT NULL,
DoctorNatID CHAR(14) NOT NULL,
startDate DATE NULL,
PRIMARY KEY (PatientNatID, DoctorNatID),
FOREIGN KEY (PatientNatID) REFERENCES Patient(NatID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (DoctorNatID) REFERENCES Doctor(NatID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS ORG(
OrgNo INT NOT NULL PRIMARY KEY,
OrgName VARCHAR(150) NOT NULL,
OpeningDetails VARCHAR(300) NOT NULL,
Notes VARCHAR(500) NOT NULL
);

CREATE TABLE IF NOT EXISTS ORGLocation(
OrgNo INT NOT NULL,
Location VARCHAR(250) NOT NULL,
PRIMARY KEY(OrgNo, Location),
FOREIGN KEY (OrgNo) REFERENCES ORG(OrgNo) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS MedicalConditions(
PatientNatID CHAR(14) NOT NULL,
MedCondition CHAR(14) NOT NULL,
Notes VARCHAR(500) NOT NULL,
PRIMARY KEY(PatientNatID, MedCondition),
FOREIGN KEY (PatientNatID) REFERENCES Patient(NatID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS MedicalTests(
PatientNatID CHAR(14) NOT NULL,
TestID INTEGER NOT NULL, 
Test_Type VARCHAR(15),
SubjectOfTest VARCHAR(50),
Result VARCHAR(100),
ImageOfScan VARCHAR(50),
Date_TimeOfUpload DATETIME,
PRIMARY KEY(PatientNatID,TestID),
FOREIGN KEY(PatientNatID) REFERENCES Patient(NatID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Presriptions(
PatientNatID CHAR(14) NOT NULL,
PrescriptionID INTEGER NOT NULL,
DocNatID CHAR(14),
DateOfPrescription DATE,
PRIMARY KEY(PatientNatID,PrescriptionID),
FOREIGN KEY(PatientNatID) REFERENCES Patient(NatID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(DocNatID) REFERENCES Doctor(NatID) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS Medicine(
PatientNatID CHAR(14) NOT NULL,
PrescriptionID INTEGER NOT NULL,
MedicineName VARCHAR(35) NOT NULL,
subscriptionHeading CHAR(2),
FormOfIntake VARCHAR(25),
DurationOfIntake INTEGER,
FrequencyOfIntake VARCHAR(25),
PRIMARY KEY(PatientNatID,PrescriptionID,MedicineName),
FOREIGN KEY(PatientNatID, PrescriptionID) REFERENCES Presriptions(PatientNatID, PrescriptionID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Referring(
ReferringNatID CHAR(14) NOT NULL,
ReferredNatID CHAR(14) NOT NULL,
PatientNatID CHAR(14) NOT NULL,
PRIMARY KEY(ReferringNatID,ReferredNatID,PatientNatID),
FOREIGN KEY(ReferringNatID) REFERENCES Doctor(NatID) ON DELETE RESTRICT ON UPDATE RESTRICT,
FOREIGN KEY(ReferredNatID) REFERENCES Doctor(NatID) ON DELETE RESTRICT ON UPDATE RESTRICT,
FOREIGN KEY(PatientNatID) REFERENCES Patient(NatID) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS Appointments(
DocNatID CHAR(14) NOT NULL,
AppID INTEGER NOT NULL,
OrgNum INTEGER,
AppDateTime DATETIME,
PatientNatID CHAR(14),
PRIMARY KEY(DocNatID,AppID),
FOREIGN KEY(DocNatID) REFERENCES Doctor(NatID) ON DELETE RESTRICT ON UPDATE RESTRICT,
FOREIGN KEY(OrgNum) REFERENCES ORG(OrgNo) ON DELETE RESTRICT ON UPDATE RESTRICT,
FOREIGN KEY(PatientNatID) REFERENCES Patient(NatID) ON DELETE CASCADE ON UPDATE CASCADE
); 

CREATE TABLE IF NOT EXISTS WorksIn(
DocNatID CHAR(14) NOT NULL,
OrgNum INTEGER NOT NULL,
ScheduleWorkingDays VARCHAR(15),
ScheduleWorkingHours VARCHAR(15),
PRIMARY KEY(DocNatID,OrgNum),
FOREIGN KEY(DocNatID) REFERENCES Doctor(NatID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(OrgNum) REFERENCES ORG(OrgNo) ON DELETE CASCADE ON UPDATE CASCADE
);
